#define ll long long
#define rep(i,n) for(int i=0; i<n; i++)
#define pb push_back

class Solution {
    
vector<vector<ll>> adj;
vector<int> vis;
public:
    bool isBipartite(vector<vector<int>>& graph) {
        ll n = graph.size();
        adj.assign(n+1, vector<ll> {});
        
        rep(i, n){
            ll u = i;
            rep(j, graph[i].size()){
                ll v = graph[i][j];
                adj[u].pb(v);
                adj[v].pb(u);
                
            }
        }
        
        int flag=0;
        
        queue<int> q;
        vis.assign(n, -1);
        
        
        
        rep(i, n){
            if(vis[i]!=-1) continue;
            
            
            q.push(i);
            ll col = 1;
            
            
            while(!q.empty()){
                ll size = q.size();
                
                while(size--){
                    
                    ll x = q.front();
                    q.pop();
                    
                    if(vis[x]==-1){
                        vis[x] = col; 
                    }else{
                        if(vis[x]!=col) return false;
                        continue;
                    }
                    
                    for(auto i : adj[x]){
                        q.push(i);
                    }
                        
                    
                }
                col^=1;
                
            }
            
        }
        
        return true;
        
    }
    
};
