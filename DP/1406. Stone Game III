#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
class Solution {
public:
    
    ll dp[50001][2];
    
    ll recur(int i, int player, vector<int> &stone, int n){
        if(i>=n)
            return 0;
        
        if(dp[i][player]!=-1e6) {
            return dp[i][player];
        }
        ll mx = player? 1e9 : -1e9;
        if(!player){
            mx = max({ 
                        i+1<n ? stone[i]+ stone[i+1] + recur(i+2, player^1, stone, n) : -1000000009,
                        i+2<n ? stone[i]+ stone[i+1]+ stone[i+2] + recur(i+3, player^1, stone, n) : -1000000009,
                        stone[i] + recur(i+1, player^1, stone, n)
                          });
        }else{
            mx = min({
                recur(i+2, player^1, stone, n), 
                recur(i+3, player^1, stone, n),
                recur(i+1, player^1, stone, n)
            });
        }
        

        return dp[i][player] = mx;
    }
    
    string stoneGameIII(vector<int>& stoneValue) {
        rep(i, 50001) dp[i][0] = -1e6, dp[i][1] = -1e6;
        
        ll sum = 0;
        rep(i, stoneValue.size()){
            sum+= stoneValue[i];
        }
        ll now = recur(0, 0 , stoneValue, stoneValue.size());
        
        now = dp[0][0];
        
        if(now == sum - now) return "Tie";
        return now> sum - now ? "Alice" : "Bob";
        
    }
};
