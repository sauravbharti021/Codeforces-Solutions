#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
class Solution {
public:
    int dp[101][201];
    int recur(int i, int end, vector<int> &locations, int fuel){
        if(dp[i][fuel]!=-1) return dp[i][fuel];
        
        int ans=0;
        if(i==end) {
            ans = (ans+1)%mod;
        }
        rep(k, locations.size()){
            if(k==i) continue;
            if(fuel>= abs(locations[k]-locations[i]))
            ans= (ans+  recur(k, end, locations, fuel-abs(locations[k]-locations[i]) )%mod)%mod;
            ans%=mod;
            if(ans<0) ans+=mod;
        }    
        return dp[i][fuel]= ans%mod;
    }
    int countRoutes(vector<int>& locations, int start, int finish, int fuel) {
        
        memset(dp, -1, sizeof dp);
        ll ans=recur(start, finish, locations, fuel);
        
        
        ans%=mod;
        if(ans<0) ans+=mod;
        
        return ans;
    }
};
