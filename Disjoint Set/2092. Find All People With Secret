#define rep(i,n) for(int i=0;i<n;i++)
#define all(c) c.begin(),c.end()
#define pb push_back
#define ss second
#define ff first
class Solution {
    
struct dsu{
    vector<int> par, rank;
    void makeset(int n){
        par.assign(n+1, -1);
        rank.assign(n+1, 1);
        rep(i,n+1) par[i]=i;
    }
    int find(int x){
        while(par[x]!=x)
            x=par[x];
        return x;
    }
    void unite(int u, int v){
        u= find(u);
        v= find(v);
        if(rank[u]>rank[v]){
            rank[u] += rank[v];
            par[v] =u;
        }else{
            rank[v] += rank[u];
            par[u] =v;
        }
    }
};
    
public:
    vector<int> findAllPeople(int n, vector<vector<int>>& meetings, int firstPerson) {
        
        /*
            sorting + disjoint set?
        */
        vector<int> vis(n+1, false);
        
        map<int, vector<pair<int,int>>> m;
        
        rep(i,meetings.size()){
            m[meetings[i][2]].pb({meetings[i][0], meetings[i][1]});
            
        }
        
        vis[0]=true;
        vis[firstPerson]=true;
        
        for(auto i: m){
            map<int,int> m2, m3;
            int cnt=1;
            
            rep(j, i.ss.size()){
                int u= i.ss[j].ff, v=i.ss[j].ss;
                if(m2.find(u)==m2.end()){
                    m2[u] = cnt;
                    m3[cnt] = u;
                    cnt++;
                }
                if(m2.find(v)==m2.end()){
                    m2[v] = cnt;
                    m3[cnt] =v;
                    cnt++;
                }
            }
            
            
            dsu d;
            d.makeset(cnt+10);
            
            rep(j, i.ss.size()){
                int u= m2[i.ss[j].ff], v= m2[i.ss[j].ss];
                d.unite(u,v);
                
                
            }
            rep(j, i.ss.size()){
                int u= i.ss[j].ff, v= i.ss[j].ss;
                
                if(vis[u]){
                    vis[m3[d.find(m2[v])] ] = true;
                    vis[m3[d.find(m2[u])] ] = true;
                }
                if(vis[v]){
                    vis[m3[d.find(m2[v])] ] = true;
                    vis[m3[d.find(m2[u])] ] = true;
                }
            }
            
            
            rep(j, i.ss.size()){
                int u= m2[i.ss[j].ff] , v= m2[i.ss[j].ss];
                
                if(vis[m3[d.find(u)]] || vis[m3[d.find(v)]] || vis[i.ss[j].ff] || vis[i.ss[j].ss] ){
                    vis[i.ss[j].ff]=true;
                    vis[i.ss[j].ss] =true;
                }
            }
            
        }
        
        vector<int> ans;
        rep(i,n+1){
            if(vis[i]) ans.pb(i);
        }
        
        return ans;
        
        
    }
};
